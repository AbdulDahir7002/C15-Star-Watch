name: PyTest Workflow

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: |
          pytest
  dashboard-deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: get code
        uses: actions/checkout@v4.2.2
      - name: make pemkey
        run: |
          printf "%s" ${{ secrets.SSH_PRIVATE_KEY }} > dashboard/.pemkey
          chmod 400 dashboard/.pemkey
      - name: kill process
        run: |
          ssh -i dashboard/.pemkey ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} <<EOF
          PID=$(pgrep -f "streamlit run")
          if [ ! -z "$PID" ]; then
          kill $PID
          else
          echo "No process running"
          fi EOF

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          SOURCE: "dashboard"
      - name: start process
        run: |
          ssh -i dashboard/.pemkey ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} <<EOF
          cd dashboard
          nohup streamlit run main.py &
          EOF

